pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages{
        stage('sonarqube scan'){
        agent {docker { image 'maven:3-amazoncorretto-17-debian' }} 
            steps{
                withSonarQubeEnv('sonarserver'){ 
              sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=edwigelau_week16-code'
             // sh 'mvn sonar:sonar'
            }
            }
        }
        stage('all maven commands'){
            steps{
                sh 'mvn clean test compile install package'
            }
        }
        stage('upload artifact'){
            steps{
                sh 'curl -uadmin:APMVLLh67hUR9Vz8froNCeT1ip -T target/bio*.jar \
                "http://3.83.228.254:8081/artifactory/geoapp/"'
            }
        }
        stage('image build'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 317346518354.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp .'

            }
        }
        stage('push image'){
            steps{
             sh 'docker tag geoapp:latest 317346518354.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
             sh 'docker push 317346518354.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'

           }  
        }     

    }
        
 }
    
